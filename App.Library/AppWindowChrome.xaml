<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:App.Library"
                    xmlns:shell="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:lang = "clr-namespace:EduRoam.Localization;assembly=EduRoam.Localization"
                    xmlns:b = "clr-namespace:App.Library.Binding">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <b:MainViewModelProxy x:Key="proxy" DataCtx="{Binding}" />

    <Style x:Key="StandardStyle" TargetType="{x:Type local:MainWindow}">
        <Setter Property="shell:WindowChrome.WindowChrome">
            <Setter.Value>
                <shell:WindowChrome CornerRadius="1" ResizeBorderThickness="1" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:MainWindow}">
                    <Grid Background="Transparent">
                        <Border Background="Transparent"
                            Margin="{Binding Source={x:Static SystemParameters.WindowNonClientFrameThickness}}">
                            <ContentPresenter Content="{TemplateBinding Content}" />
                        </Border>

                        <Grid Margin="10, 1, 148, 0" Background="Transparent" Height="24" 
                                    HorizontalAlignment="Stretch" VerticalAlignment="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="24" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="40" />
                            </Grid.ColumnDefinitions>

                            <Button Grid.Column="0" 
                                    x:Name="AppMenu"
                                    Content="&#xE700;" 
                                    HorizontalAlignment="Left"
                                    Command="{Binding OpenMenuCommand}"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Style="{DynamicResource GlobalNavStyle}">
                                <Button.ContextMenu>
                                    <ContextMenu IsOpen="{Binding DataCtx.ShowMenu, Source={StaticResource proxy}}" >
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemLoadEAP}" 
                                              Command="{Binding DataCtx.LoadEapFileCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.CanEapFileBeLoaded, Source={StaticResource proxy}}"/>
                                        <Separator/>
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemRefresh}" 
                                              Command="{Binding DataCtx.RefreshCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.IsARefreshPossible, Source={StaticResource proxy}}"/>
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemReauthenticate}" 
                                              Command="{Binding DataCtx.ReauthenticateCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.IsReauthenticatePossible, Source={StaticResource proxy}}"/>
                                        <Separator/>
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemRemoveProfile}" 
                                              Command="{Binding DataCtx.RemoveProfileCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.CanProfileBeRemoved, Source={StaticResource proxy}}"/>
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemRemoveCertificates}" 
                                              Command="{Binding DataCtx.RemoveCertificatesCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.CanCertificatesBeRemoved, Source={StaticResource proxy}}"/>
                                        <MenuItem Header="{x:Static lang:Resources.MenuItemUninstall}" 
                                              Command="{Binding DataCtx.UninstallCommand, Source={StaticResource proxy}}"
                                              IsEnabled="{Binding DataCtx.CanAppBeUninstalled, Source={StaticResource proxy}}"/>
                                    </ContextMenu>
                                </Button.ContextMenu>
                            </Button>

                            <Grid Grid.Column="1"
                                  x:Name="SearchPanel"
                                  Height="20"                                  
                                  HorizontalAlignment="Stretch"
                                  VerticalAlignment="Center"
                                  Margin="0,2,0,2"
                                  Visibility="{Binding ShowSearch, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid HorizontalAlignment="Stretch"
                                      VerticalAlignment="Center"
                                      MaxWidth="240">
                                    <TextBox x:Name="tbSearch"
                                             Height="20"
                                             Padding="2, 0, 2, 0"
                                             Background="{DynamicResource BackgroundBrush}"
                                             shell:WindowChrome.IsHitTestVisibleInChrome="True" 
                                             Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}" >
                                        <TextBox.InputBindings>
                                            <KeyBinding Command="{Binding Path=GoSearchCommand}" Key="Enter" />
                                            <KeyBinding Command="{Binding Path=GoSearchCommand}" Key="Tab" />
                                        </TextBox.InputBindings>
                                    </TextBox>
                                    <!--Watermark for textbox-->
                                    <Grid HorizontalAlignment="Left"
                                        VerticalAlignment="Center"
                                        Margin="8, 0, 0, 0"
                                        Height="20">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="24" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock
                                            Grid.Column="0"
                                            FontFamily="{StaticResource IconFont}"                                            
                                            Style="{DynamicResource Watermark}">
                                            <TextBlock.Text>
                                                &#xE721;
                                            </TextBlock.Text>
                                        </TextBlock>
                                        <TextBlock
                                            Grid.Column="1"
                                            Text="{x:Static lang:Resources.Search}"
                                            Style="{DynamicResource Watermark}"/>
                                    </Grid>
                                </Grid>
                            </Grid>

                            <Button Grid.Column="2" 
                                    x:Name="Help"
                                    Content="&#xE897;"
                                    Command="{Binding OpenHelpCommand}"
                                    shell:WindowChrome.IsHitTestVisibleInChrome="True"
                                    Style="{DynamicResource GlobalNavStyle}">
                            </Button>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="Watermark" TargetType="{x:Type TextBlock}">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="Foreground" Value="{DynamicResource BlueButtonBrush}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="IsHitTestVisible" Value="False" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Text, ElementName=tbSearch}" Value="">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="GlobalNavStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent" />
        <Setter Property="Foreground" Value="{x:Static SystemColors.ActiveCaptionTextBrush}"/>
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{x:Static SystemColors.ControlLightBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}, Path=IsActive}" Value="False">
                            <Setter Property="Foreground" Value="{x:Static SystemColors.InactiveCaptionTextBrush}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>